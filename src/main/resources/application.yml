spring:
  application:
    name: TeamChatSa

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc.time_zone: ${TZ}

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_SECRET_KEY}
            client-secret: ${KAKAO_CLIENT_SECRET_KEY}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
            - profile_nickname
            - account_email
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public

  # MongoDB / Redis
  data:
    mongodb:
      uri: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGO_HOST:localhost}:${MONGO_PORT:27017}/?authSource=admin
      database: ${MONGO_DB}
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

server:
  port: ${SERVER_PORT:8080}

app:
  jwt:
    secret: ${JWT_SECRET}
    access-minutes: 30
    refresh-days: 14
  auth:
    redirect-success: http://localhost:3000/auth/kakao/callback
    redirect-failure: http://localhost:3000/auth/kakao/failure